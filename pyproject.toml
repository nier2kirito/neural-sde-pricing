[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "neural-sde-pricing"
version = "1.0.0"
description = "Neural SDEs for robust option pricing and hedging"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "Patryk Gierjatowicz"},
    {name = "Marc Sabate-Vidales"},
    {name = "David Šiška"},
    {name = "Lukasz Szpruch"},
    {name = "Žan Žurič"},
]
keywords = ["neural-sde", "option-pricing", "stochastic-differential-equations", "quantitative-finance", "hedging"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Office/Business :: Financial :: Investment",
]
dependencies = [
    "torch>=1.9.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
]

[project.optional-dependencies]
dev = [
    "black>=21.0.0",
    "flake8>=3.9.0",
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "mypy>=0.910",
]
notebooks = [
    "jupyter>=1.0.0",
    "notebook>=6.4.0",
    "ipywidgets>=7.6.0",
]
advanced = [
    "geomloss>=0.2.3",
    "pandas>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/NeuralSDE_pricing_hedging"
Repository = "https://github.com/yourusername/NeuralSDE_pricing_hedging"
Documentation = "https://github.com/yourusername/NeuralSDE_pricing_hedging#readme"
"Bug Reports" = "https://github.com/yourusername/NeuralSDE_pricing_hedging/issues"
"Paper" = "https://arxiv.org/abs/2007.04154"

[project.scripts]
neural-sde-train = "nsde_LV:main"

[tool.setuptools]
packages = ["neural_sde_pricing"]

[tool.setuptools.package-data]
"*" = ["*.pt", "images/*.png", "images/*.pdf"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
